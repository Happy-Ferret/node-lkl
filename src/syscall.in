async chdir(path string)
async chroot(path string)
async close(fd int)
async fchdir(fd int)
async fchmod(fd int, mode uint32)
async fchownat(dirfd int, path string, uid int, gid int, flags int)
async fchown(fd int, uid int, gid int)
async fcntl(fd int, cmd int, arg int)
async fdatasync(fd int)
async fsync(fd int)
async getcwd(buf []byte)
async getdents(fd int, buf []byte)
async getxattr(path string, attr string, dest []byte)
async lchown(path string, uid int, gid int)
async linkat(olddirfd int, oldpath string, newdirfd int, newpath string, flags int)
async listxattr(path string, dest []byte)
async mkdirat(dirfd int, path string, mode uint32)
async mknodat(dirfd int, path string, mode uint32, dev int)
async openat(dirfd int, path string, flags int, mode uint32)
async pread64(fd int, p []byte, offset int64)
async pwrite64(fd int, p []byte, offset int64)
async read(fd int, p []byte)
async readlinkat(dirfd int, path string, buf []byte)
async removexattr(path string, attr string)
async renameat2(olddirfd int, oldpath string, newdirfd int, newpath string, flags int)
async setxattr(path string, attr string, data []byte, flags int)
async symlinkat(oldpath string, newdirfd int, newpath string)
async sync()
async truncate(path string, length int64)
async unlinkat(dirfd int, path string, flags int)
async write(fd int, p []byte)

// Unimplemented syscalls

// async faccessat(dirfd int, path string, mode uint32, flags int)
// async fallocate(fd int, mode uint32, off int64, len int64)
// async fchmodat(dirfd int, path string, mode uint32, flags int)
// async flock(fd int, how int)
// async fstat(fd int, stat *Stat_t)
// async fstatfs(fd int, buf *Statfs_t)
// async ftruncate(fd int, length int64)
// async futimesat(dirfd int, path *byte, times *[2]Timeval)
// async inotifyAddWatch(fd int, pathname string, mask uint32)
// async inotifyInit1(flags int)
// async inotifyInit()
// async inotifyRmWatch(fd int, watchdesc uint32)
// async lstat(path string, stat *Stat_t)
// async readlen(fd int, p *byte, np int)
// async seek(fd int, offset int64, whence int)
// async sendfile(outfd int, infd int, offset *int64, count int)
// async statfs(path string, buf *Statfs_t)
// async stat(path string, stat *Stat_t)
// async syncFileRange(fd int, off int64, n int64, flags int)
// async utimensat(dirfd int, path string, times *[2]Timespec)
// async utime(path string, buf *Utimbuf)
// async utimes(path string, times *[2]Timeval)
// async writelen(fd int, p *byte, np int)

// // io
// 
// Dup3(oldfd int, newfd int, flags int)
// Dup(oldfd int)
// Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int)
// Tee(rfd int, wfd int, len int, flags int)
// pipe2(p *[2]_C_int, flags int)
// pipe(p *[2]_C_int)

// # other
// Acct(path string)
// Adjtimex(buf *Timex)
// EpollCreate1(flag int)
// EpollCreate(size int)
// EpollCtl(epfd int, op int, fd int, event *EpollEvent)
// EpollWait(epfd int, events []EpollEvent, msec int)
// Exit(code int) = SYS_EXIT_GROUP
// exitThread(code int)
// Getegid()
// Geteuid()
// Getgid()
// getgroups(n int, list *_Gid_t)
// getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen)
// Getpgid(pid int)
// Getpid()
// Getppid()
// Getpriority(which int, who int)
// Getrlimit(resource int, rlim *Rlimit)
// Getrusage(who int, rusage *Rusage)
// Gettid()
// Getuid()
// Kill(pid int, sig Signal)
// Klogctl(typ int, buf []byte)
// Mlockall(flags int)
// Mlock(b []byte)
// mmap(addr uintptr, length uintptr, prot int, flags int, fd int, offset int64)
// mount(source string, target string, fstype string, flags uintptr, data *byte)
// Mprotect(b []byte, prot int)
// Munlockall()
// Munlock(b []byte)
// munmap(addr uintptr, length uintptr)
// Nanosleep(time *Timespec, leftover *Timespec)
// Pause()
// PivotRoot(newroot string, putold string)
// prlimit(pid int, resource int, old *Rlimit, newlimit *Rlimit)
// ptrace(request int, pid int, addr uintptr, data uintptr)
// reboot(magic1 uint, magic2 uint, cmd int, arg string)
// recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen)
// recvmsg(s int, msg *Msghdr, flags int)
// Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval)
// sendmsg(s int, msg *Msghdr, flags int)
// sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen)
// Setdomainname(p []byte)
// Setfsgid(gid int)
// Setfsuid(uid int)
// setgroups(n int, list *_Gid_t)
// Sethostname(p []byte)
// Setpgid(pid int, pgid int)
// Setpriority(which int, who int, prio int)
// Setregid(rgid int, egid int)
// Setresgid(rgid int, egid int, sgid int)
// Setresuid(ruid int, euid int, suid int)
// Setreuid(ruid int, euid int)
// Setrlimit(resource int, rlim *Rlimit)
// Setsid()
// Settimeofday(tv *Timeval)
// Shutdown(fd int, how int)
// Sysinfo(info *Sysinfo_t)
// Tgkill(tgid int, tid int, sig Signal)
// Times(tms *Tms)
// Umask(mask int)
// Uname(buf *Utsname)
// Unmount(target string, flags int)
// Unshare(flags int)
// Madvise(b []byte, advice int)
// Ustat(dev int, ubuf *Ustat_t)
// wait4(pid int, wstatus *_C_int, options int, rusage *Rusage)
